openapi: 3.0.0
info:
  title: Mentoring System REST API
  version: 0.0.1

paths:
  /api/v1/auth/login:
    post:
      tags:
        - Authorization
      summary: User authorization
      description: Authorize user and return JWT token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user.surname@email.com"
                password:
                  type: string
                  minLength: 10
                  maxLength: 20
                  example: "somepassword"
              required:
                - email
                - password
      responses:
        '200':
          description: A JSON map with JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: 'xxxxxxxxxxx'
        '400':
          description: Body is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Необіхдно ввести пароль."
                  instance:
                    type: string
                    example: "/api/v1/auth/login"
        '401':
          description: Credentials are wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 401
                  detail:
                    type: string
                    example: "Неправильно введено пошту або пароль, первірте правильність вводу."
                  instance:
                    type: string
                    example: "/api/v1/auth/login"
  /api/v1/auth/register:
    post:
      tags:
        - Authorization
      summary: User registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                  example: "Name"
                surname:
                  type: string
                  minLength: 2
                  maxLength: 50
                  example: "Surname"
                email:
                  type: string
                  example: "user.surname@email.com"
                password:
                  type: string
                  minLength: 10
                  maxLength: 20
                  example: "somepassword"
                role:
                  type: string
                  enum:
                    - MENTOR
                    - MENTEE
              required:
                - name
                - surname
                - email
                - password
                - role
      responses:
        '201':
          description: User was successfully registered
        '400':
          description: "1. The email is already registered\n2. Body is invalid"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Дана пошта вже зареєстрована, спробуйте іншу."
                  instance:
                    type: string
                    example: "/api/v1/auth/register"
  #        '500':
  #          description: An internal server error
  #          content:
  #            application/json:
  #              schema:
  #                type: object
  #                properties:
  #                  message:
  #                    type: string
  #                    example: 'Internal Server Error'
  /api/v1/auth/restore-password:
    post:
      tags:
        - Authorization
      summary: Restore user password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "name.surname@email.com"
      responses:
        '200':
          description: Password was changed and sent to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Новий пароль надіслано на пошту."
        '404':
          description: User by email was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Користувача з даною поштою не знайдено. Переконайтеся в правильності вводу."
                  instance:
                    type: string
                    example: "/api/v1/auth/restore-password"

  /api/v1/users/{id}:
    get:
      tags:
        - User
      summary: Return an user
      parameters:
        - in: "path"
          name: "id"
          required: true
          example: "1"
      responses:
        '200':
          description: A JSON map with user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 123
                  name:
                    type: string
                    example: "Name"
                    minLength: 2
                    maxLength: 50
                  surname:
                    type: string
                    example: "Surname"
                    minLength: 2
                    maxLength: 50
                  email:
                    type: string
                    example: "name.surname@email.com"
                  status:
                    type: string
                    enum:
                      - NEEDS_INFORMATION
                      - ACTIVE
                  createdAt:
                    type: string
                    example: "21.04.2023"
                  role:
                    type: string
                    enum:
                      - MENTOR
                      - MENTEE
                  questionnaire:
                    type: object
                    properties:
                      about:
                        type: string
                        minLength: 250
                        maxLength: 1024
                        example: "Some information about user"
                      skills:
                        type: array
                        items:
                          example: "Skill"
                      companies:
                        type: array
                        items:
                          example: "Company"
                      rank:
                        type: string
                        example: "Rank"
                      specialization:
                        type: string
                        example: "Specialization"
                      hoursPerWeek:
                        type: number
                        example: 20.5
                  profilePhotoUrl:
                    type: string
                    example: "https://url.com/profile-photo.jpg"
        '404':
          description: An error of not found user
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти даного користувача."
                  instance:
                    type: string
                    example: "/api/v1/users/1"
    put:
      tags:
        - User
      summary: Update user information
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 123
                    name:
                      type: string
                      example: "Name"
                      minLength: 2
                      maxLength: 50
                    surname:
                      type: string
                      example: "Surname"
                      minLength: 2
                      maxLength: 50
                    email:
                      type: string
                      example: "name.surname@email.com"
                    status:
                      type: string
                      enum:
                        - NEEDS_INFORMATION
                        - ACTIVE
                    role:
                      type: string
                      enum:
                        - MENTOR
                        - MENTEE
                    questionnaire:
                      type: object
                      properties:
                        about:
                          type: string
                          minLength: 250
                          maxLength: 1024
                          example: "Some information about user"
                        skills:
                          type: array
                          items:
                            example: "Skill"
                        companies:
                          type: array
                          items:
                            example: "Company"
                        rank:
                          type: string
                          example: "Rank"
                        specialization:
                          type: string
                          example: "Specialization"
                        hoursPerWeek:
                          type: number
                          example: 20.5
                photo:
                  type: string
                  format: binary
            encoding:
              photo:
                contentType: image/png, image/jpg
      responses:
        '204':
          description: User information was updated successfully
        '404':
          description: An error of not found user
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти такого користувача."
                  instance:
                    type: string
                    example: "/api/v1/users/1"
      security:
        - jwt_token: [ ]
  /api/v1/users/me/status:
    get:
      tags:
        - User
      summary: Return a user status
      responses:
        '200':
          description: A JSON map with user status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - NEEDS_INFORMATION
                      - ACTIVE
        '404':
          description: Cannot find user by email
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти даного користувача."
                  instance:
                    type: string
                    example: "/api/v1/users/me/status"
  /api/v1/users/mentors:
    get:
      tags:
        - User
      summary: Return a page with mentors
      parameters:
        - in: "path"
          name: "rank"
          required: false
          example: "Trainee"
        - in: "path"
          name: "specializations"
          required: false
          example: "JavaScript,Java"
        - in: "path"
          name: "hoursPerWeek"
          required: false
          example: "40.5"
        - in: "path"
          name: "page"
          required: false
          example: 2
      responses:
        '200':
          description: A JSON map with page of mentors
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      content:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              format: int64
                              example: 123
                            name:
                              type: string
                              example: "Name"
                              minLength: 2
                              maxLength: 50
                            surname:
                              type: string
                              example: "Surname"
                              minLength: 2
                              maxLength: 50
                            email:
                              type: string
                              example: "name.surname@email.com"
                            status:
                              type: string
                              example: ACTIVE
                            createdAt:
                              type: string
                              example: "21.04.2023"
                            role:
                              type: string
                              example: MENTOR
                            questionnaire:
                              type: object
                              properties:
                                about:
                                  type: string
                                  minLength: 250
                                  maxLength: 1024
                                  example: "Some information about user"
                                skills:
                                  type: array
                                  items:
                                    example: "Skill"
                                companies:
                                  type: array
                                  items:
                                    example: "Company"
                                rank:
                                  type: string
                                  example: "Rank"
                                specialization:
                                  type: string
                                  example: "Specialization"
                                hoursPerWeek:
                                  type: number
                                  example: 20.5
                            profilePhotoUrl:
                              type: string
                              example: "https://url.com/profile-photo.jpg"
                      currentPageNumber:
                        type: integer
                        format: int32
                        example: "1"
                      totalPages:
                        type: integer
                        format: int32
                        example: "10"
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Номер сторінки не може бути менше 1."
                  instance:
                    type: string
                    example: "/api/v1/users/mentors"
  /api/v1/users/mentees:
    get:
      tags:
        - User
      summary: Return a page with mentees
      parameters:
        - in: "path"
          name: "rank"
          required: false
          example: "Trainee"
        - in: "path"
          name: "specializations"
          required: false
          example: "JavaScript,Java"
        - in: "path"
          name: "hoursPerWeek"
          required: false
          example: "40.5"
        - in: "path"
          name: "page"
          required: false
          example: 2
      responses:
        '200':
          description: A JSON map with page of mentees
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      content:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              format: int64
                              example: 123
                            name:
                              type: string
                              example: "Name"
                              minLength: 2
                              maxLength: 50
                            surname:
                              type: string
                              example: "Surname"
                              minLength: 2
                              maxLength: 50
                            email:
                              type: string
                              example: "name.surname@email.com"
                            status:
                              type: string
                              example: ACTIVE
                            createdAt:
                              type: string
                              example: "21.04.2023"
                            role:
                              type: string
                              example: MENTEE
                            questionnaire:
                              type: object
                              properties:
                                about:
                                  type: string
                                  minLength: 250
                                  maxLength: 1024
                                  example: "Some information about user"
                                skills:
                                  type: array
                                  items:
                                    example: "Skill"
                                companies:
                                  type: array
                                  items:
                                    example: "Company"
                                rank:
                                  type: string
                                  example: "Rank"
                                specialization:
                                  type: string
                                  example: "Specialization"
                                hoursPerWeek:
                                  type: number
                                  example: 20.5
                            profilePhotoUrl:
                              type: string
                              example: "https://url.com/profile-photo.jpg"
                      currentPageNumber:
                        type: integer
                        format: int32
                        example: "1"
                      totalPages:
                        type: integer
                        format: int32
                        example: "10"
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Номер сторінки не може бути менше 1."
                  instance:
                    type: string
                    example: "/api/v1/users/mentees"

  /api/v1/mentoring-requests/from-me:
    get:
      tags:
        - MentoringRequest
      summary: Returns a page with user's mentoring requests
      parameters:
        - in: path
          name: status
          required: false
          example: pending
        - in: path
          name: page
          required: false
          example: 2
      responses:
        '200':
          description: A JSON map with page of user's mentoring requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      content:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 1
                          from:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                example: 123
                              name:
                                type: string
                                example: "Name"
                                minLength: 2
                                maxLength: 50
                              surname:
                                type: string
                                example: "Surname"
                                minLength: 2
                                maxLength: 50
                              email:
                                type: string
                                example: "name.surname@email.com"
                              status:
                                type: string
                                enum:
                                  - NEEDS_INFORMATION
                                  - ACTIVE
                              createdAt:
                                type: string
                                example: "21.04.2023"
                              role:
                                type: string
                                enum:
                                  - MENTOR
                                  - MENTEE
                              questionnaire:
                                type: object
                                properties:
                                  about:
                                    type: string
                                    minLength: 250
                                    maxLength: 1024
                                    example: "Some information about user"
                                  skills:
                                    type: array
                                    items:
                                      example: "Skill"
                                  companies:
                                    type: array
                                    items:
                                      example: "Company"
                                  rank:
                                    type: string
                                    example: "Rank"
                                  specialization:
                                    type: string
                                    example: "Specialization"
                                  hoursPerWeek:
                                    type: number
                                    example: 20.5
                              profilePhotoUrl:
                                type: string
                                example: "https://url.com/profile-photo.jpg"
                          to:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                example: 123
                              name:
                                type: string
                                example: "Name"
                                minLength: 2
                                maxLength: 50
                              surname:
                                type: string
                                example: "Surname"
                                minLength: 2
                                maxLength: 50
                              email:
                                type: string
                                example: "name.surname@email.com"
                              status:
                                type: string
                                enum:
                                  - NEEDS_INFORMATION
                                  - ACTIVE
                              createdAt:
                                type: string
                                example: "21.04.2023"
                              role:
                                type: string
                                enum:
                                  - MENTOR
                                  - MENTEE
                              questionnaire:
                                type: object
                                properties:
                                  about:
                                    type: string
                                    minLength: 250
                                    maxLength: 1024
                                    example: "Some information about user"
                                  skills:
                                    type: array
                                    items:
                                      example: "Skill"
                                  companies:
                                    type: array
                                    items:
                                      example: "Company"
                                  rank:
                                    type: string
                                    example: "Rank"
                                  specialization:
                                    type: string
                                    example: "Specialization"
                                  hoursPerWeek:
                                    type: number
                                    example: 20.5
                              profilePhotoUrl:
                                type: string
                                example: "https://url.com/profile-photo.jpg"
                          status:
                            type: string
                            enum:
                              - PENDING
                              - REJECTED
                              - ACCEPTED
                          createdAt:
                            type: string
                            example: "21.04.2023"
                          updatedAt:
                            type: string
                            example: "21.04.2023"
                      currentPageNumber:
                        type: integer
                        format: int32
                        example: 1
                      totalPages:
                        type: integer
                        format: int32
                        example: 2
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Номер сторінки не може бути менше 1."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/from-me"
      security:
        - jwt_token: [ ]
  /api/v1/mentoring-requests/to-me:
    get:
      tags:
        - MentoringRequest
      summary: Returns a page with mentoring requests to user
      parameters:
        - in: path
          name: status
          required: false
          example: pending
        - in: path
          name: page
          required: false
          example: 2
      responses:
        '200':
          description: A JSON map with page of mentoring requests to user
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: object
                    properties:
                      content:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                            example: 1
                          from:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                example: 123
                              name:
                                type: string
                                example: "Name"
                                minLength: 2
                                maxLength: 50
                              surname:
                                type: string
                                example: "Surname"
                                minLength: 2
                                maxLength: 50
                              email:
                                type: string
                                example: "name.surname@email.com"
                              status:
                                type: string
                                enum:
                                  - NEEDS_INFORMATION
                                  - ACTIVE
                              createdAt:
                                type: string
                                example: "21.04.2023"
                              role:
                                type: string
                                enum:
                                  - MENTOR
                                  - MENTEE
                              questionnaire:
                                type: object
                                properties:
                                  about:
                                    type: string
                                    minLength: 250
                                    maxLength: 1024
                                    example: "Some information about user"
                                  skills:
                                    type: array
                                    items:
                                      example: "Skill"
                                  companies:
                                    type: array
                                    items:
                                      example: "Company"
                                  rank:
                                    type: string
                                    example: "Rank"
                                  specialization:
                                    type: string
                                    example: "Specialization"
                                  hoursPerWeek:
                                    type: number
                                    example: 20.5
                              profilePhotoUrl:
                                type: string
                                example: "https://url.com/profile-photo.jpg"
                          to:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int64
                                example: 123
                              name:
                                type: string
                                example: "Name"
                                minLength: 2
                                maxLength: 50
                              surname:
                                type: string
                                example: "Surname"
                                minLength: 2
                                maxLength: 50
                              email:
                                type: string
                                example: "name.surname@email.com"
                              status:
                                type: string
                                enum:
                                  - NEEDS_INFORMATION
                                  - ACTIVE
                              createdAt:
                                type: string
                                example: "21.04.2023"
                              role:
                                type: string
                                enum:
                                  - MENTOR
                                  - MENTEE
                              questionnaire:
                                type: object
                                properties:
                                  about:
                                    type: string
                                    minLength: 250
                                    maxLength: 1024
                                    example: "Some information about user"
                                  skills:
                                    type: array
                                    items:
                                      example: "Skill"
                                  companies:
                                    type: array
                                    items:
                                      example: "Company"
                                  rank:
                                    type: string
                                    example: "Rank"
                                  specialization:
                                    type: string
                                    example: "Specialization"
                                  hoursPerWeek:
                                    type: number
                                    example: 20.5
                              profilePhotoUrl:
                                type: string
                                example: "https://url.com/profile-photo.jpg"
                          status:
                            type: string
                            enum:
                              - PENDING
                              - REJECTED
                              - ACCEPTED
                          createdAt:
                            type: string
                            example: "21.04.2023"
                          updatedAt:
                            type: string
                            example: "21.04.2023"
                      currentPageNumber:
                        type: integer
                        format: int32
                        example: 1
                      totalPages:
                        type: integer
                        format: int32
                        example: 2
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Номер сторінки не може бути менше 1."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/to-me"
      security:
        - jwt_token: [ ]
  /api/v1/mentoring-requests:
    post:
      tags:
        - MentoringRequest
      summary: Creates new mentoring request from one user to another
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                toUserId:
                  type: integer
                  example: 1
      responses:
        '201':
          description: A request was successfully created
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Користувач не заповнив профіль, тому йому не можна відправляти запити."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests"
      security:
        - jwt_token: [ ]
  /api/v1/mentoring-requests/accept/{reqId}:
    put:
      tags:
        - MentoringRequest
      summary: Updates a mentoring request status to ACCEPTED
      parameters:
        - in: path
          name: reqId
          required: true
          example: 1
      responses:
        '204':
          description: A mentoring request status was successfully updated
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Запит уже був опрацьований."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/accept/1"
        '403':
          description: User is not authorized or has not rights to accept mentoring request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Forbidden"
                  status:
                    type: integer
                    format: int32
                    example: 403
                  detail:
                    type: string
                    example: "Схоже Ви не маєте прав, щоб прийняти цей запит."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/accept/1"
        '404':
          description: Cannot find mentoring request by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти запит, схоже його не існує."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/accept/1"
      security:
        - jwt_token: [ ]
  /api/v1/mentoring-requests/reject/{reqId}:
    put:
      tags:
        - MentoringRequest
      summary: Updates a mentoring request status to REJECTED
      parameters:
        - in: path
          name: reqId
          required: true
          example: 1
      responses:
        '204':
          description: A mentoring request status was successfully updated
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Запит уже був опрацьований."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/reject/1"
        '403':
          description: User is not authorized or has not rights to reject mentoring request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Forbidden"
                  status:
                    type: integer
                    format: int32
                    example: 403
                  detail:
                    type: string
                    example: "Схоже Ви не маєте прав, щоб відхилити цей запит."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/reject/1"
        '404':
          description: Cannot find mentoring request by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти запит, схоже його не існує."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/reject/1"
      security:
        - jwt_token: [ ]
  /api/v1/mentoring-requests/cancel/{reqId}:
    put:
      tags:
        - MentoringRequest
      summary: Updates a mentoring request status to CANCELED
      parameters:
        - in: path
          name: reqId
          required: true
          example: 1
      responses:
        '204':
          description: A mentoring request status was successfully updated
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Bad Request"
                  status:
                    type: integer
                    format: int32
                    example: 400
                  detail:
                    type: string
                    example: "Запит уже був опрацьований."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/cancel/1"
        '403':
          description: User is not authorized or has not rights to cancel mentoring request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Forbidden"
                  status:
                    type: integer
                    format: int32
                    example: 403
                  detail:
                    type: string
                    example: "Схоже Ви не маєте прав, щоб відмінити цей запит."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/cancel/1"
        '404':
          description: Cannot find mentoring request by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "about:blank"
                  title:
                    type: string
                    example: "Not Found"
                  status:
                    type: integer
                    format: int32
                    example: 404
                  detail:
                    type: string
                    example: "Не вдається знайти запит, схоже його не існує."
                  instance:
                    type: string
                    example: "/api/v1/mentoring-requests/cancel/1"
      security:
        - jwt_token: [ ]

  /api/v1/ranks:
    get:
      tags:
        - Rank
      summary: Returns a list of rank names
      responses:
        '200':
          description: A JSON map with rank names
          content:
            application/json:
              schema:
                type: object
                properties:
                  ranks:
                    type: array
                    items:
                      example: "rank"

  /api/v1/specializations:
    get:
      tags:
        - Specialization
      summary: Returns a list of specialization names
      responses:
        '200':
          description: A JSON map with specialization names
          content:
            application/json:
              schema:
                type: object
                properties:
                  ranks:
                    type: array
                    items:
                      example: "specialization"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          example: "Name"
          minLength: 2
          maxLength: 50
        surname:
          type: string
          example: "Surname"
          minLength: 2
          maxLength: 50
        email:
          type: string
          example: "name.surname@email.com"
        status:
          type: string
          enum:
            - NEEDS_INFORMATION
            - ACTIVE
        role:
          type: string
          enum:
            - MENTOR
            - MENTEE
        questionnaire:
          type: object
          properties:
            about:
              type: string
              minLength: 250
              maxLength: 1024
              example: "Some information about user"
            skills:
              type: array
              items:
                example: "Skill"
            companies:
              type: array
              items:
                example: "Company"
            rank:
              type: string
              example: "Rank"
            specialization:
              type: string
              example: "Specialization"
            hoursPerWeek:
              type: number
              example: 20.5